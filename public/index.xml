<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Trivialis</title>
    <link>https://trivialis.eu/</link>
    <description>Recent content on Trivialis</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sun, 20 Aug 2017 21:38:52 +0800</lastBuildDate>
    
        <atom:link href="https://trivialis.eu/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>About</title>
      <link>https://trivialis.eu/about/</link>
      <pubDate>Sun, 20 Aug 2017 21:38:52 +0800</pubDate>
      
      <guid>https://trivialis.eu/about/</guid>
      
        <description>&lt;p&gt;Personal place to learn and share.&lt;/p&gt;

&lt;p&gt;A playground to try and experiment.&lt;/p&gt;

&lt;p&gt;Examples mainly about open source projects.&lt;/p&gt;
</description>
      
    </item>
    
    <item>
      <title>Let`s Encrypt With Docker</title>
      <link>https://trivialis.eu/post/letsencrypt-with-docker/</link>
      <pubDate>Tue, 22 May 2018 17:58:42 +0000</pubDate>
      
      <guid>https://trivialis.eu/post/letsencrypt-with-docker/</guid>
      
        <description>&lt;p&gt;Big THANK YOU to &lt;a href=&#34;https://letsencrypt.org&#34;&gt;Let&amp;rsquo;s Encrypt&lt;/a&gt; for providing this service.&lt;/p&gt;

&lt;p&gt;Assumptions:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;docker available on the target server&lt;/li&gt;
&lt;li&gt;port 80 open for inbound connections&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;$ sudo docker run -it --rm --name certbot \
  -p 80:80 \
  -v &amp;quot;/etc/letsencrypt:/etc/letsencrypt&amp;quot; \
  -v &amp;quot;/var/lib/letsencrypt:/var/lib/letsencrypt&amp;quot; \
  certbot/certbot certonly --standalone -d domanin.org \
  --text --agree-tos \
  --email admin@example.com \
  --server https://acme-v01.api.letsencrypt.org/directory \
  --rsa-key-size 4096 --verbose --renew-by-default \
  --preferred-challenges http
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;
Certificates can be found here:
&lt;code&gt;/etc/letsencrypt/live/domain.org/&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;For tls/ssl certificate use &lt;code&gt;fullchain.pem&lt;/code&gt; &amp;amp; for certificate key use &lt;code&gt;privkey.pem&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Sample source code available for download on &lt;a href=&#34;https://github.com/tecris/blog-samples/tree/master/letsencrypt-with-docker&#34;&gt;github&lt;/a&gt;
&lt;/br&gt;
&lt;a href=&#34;https://certbot.eff.org/docs/install.html#running-with-docker&#34;&gt;Reference&lt;/a&gt;&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>Log4j2 Kafka Appender With TLS Secured Kafka Broker</title>
      <link>https://trivialis.eu/post/log4j2-kafka-appender-with-tls-secured-kafka-broker/</link>
      <pubDate>Mon, 07 May 2018 18:33:25 +0000</pubDate>
      
      <guid>https://trivialis.eu/post/log4j2-kafka-appender-with-tls-secured-kafka-broker/</guid>
      
        <description>&lt;p&gt;This example demonstrates how to send logs to a TLS secured Kafka broker using log4j2 &lt;a href=&#34;https://logging.apache.org/log4j/2.x/manual/appenders.html#KafkaAppender&#34;&gt;KafkaAppender&lt;/a&gt;.&lt;/p&gt;

&lt;h4 id=&#34;stack&#34;&gt;Stack&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Java 8&lt;/li&gt;
&lt;li&gt;Kafka 1.1.0&lt;/li&gt;
&lt;li&gt;Maven 3.5&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The oneLiner script was tested on Ubuntu 16.04 with docker (18.03.1-ce) &amp;amp; docker-compose (1.17).&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;git clone https://github.com/tecris/blog-samples&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cd log4j2-kafka-tls&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$ ./oneLiner.sh&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/tecris/blog-samples/blob/master/log4j2-kafka-tls/src/main/resources/log4j2.xml&#34;&gt;log4j2.xml&lt;/a&gt; configuration:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;Appenders&amp;gt;
  &amp;lt;Kafka name=&amp;quot;Kafka&amp;quot; topic=&amp;quot;${sys:kafkaTopic}&amp;quot;&amp;gt;
    &amp;lt;PatternLayout pattern=&amp;quot;[%-5level] %d{yyyy-MM-dd HH:mm:ss.SSS} [%t] %c{1} - %msg%n&amp;quot;/&amp;gt;
    &amp;lt;Property name=&amp;quot;bootstrap.servers&amp;quot;&amp;gt;${sys:kafkaUrl}&amp;lt;/Property&amp;gt;
    &amp;lt;Property name=&amp;quot;security.protocol&amp;quot;&amp;gt;SSL&amp;lt;/Property&amp;gt;
    &amp;lt;Property name=&amp;quot;ssl.truststore.location&amp;quot;&amp;gt;/etc/security/tls/client.truststore.jks&amp;lt;/Property&amp;gt;
    ...
  &amp;lt;/Kafka&amp;gt;
  ...
&amp;lt;/Appenders&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;/p&gt;

&lt;p&gt;Sample source code available for download on &lt;a href=&#34;https://github.com/tecris/blog-samples/tree/master/log4j2-kafka-tls&#34;&gt;github&lt;/a&gt;&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>Log4j2 Kafka Appender</title>
      <link>https://trivialis.eu/post/log4j2-kafka-appender/</link>
      <pubDate>Sat, 05 May 2018 18:33:25 +0000</pubDate>
      
      <guid>https://trivialis.eu/post/log4j2-kafka-appender/</guid>
      
        <description>&lt;p&gt;This example demonstrates how to send logs to Kafka using log4j2 &lt;a href=&#34;https://logging.apache.org/log4j/2.x/manual/appenders.html#KafkaAppender&#34;&gt;KafkaAppender&lt;/a&gt;.&lt;/p&gt;

&lt;h4 id=&#34;stack&#34;&gt;Stack&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Java 8&lt;/li&gt;
&lt;li&gt;Kafka 1.1.0&lt;/li&gt;
&lt;li&gt;Maven 3.5&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The &lt;code&gt;oneLiner&lt;/code&gt; script was tested on Ubuntu 16.04 with docker &amp;amp; docker-compose.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;git clone https://github.com/tecris/blog-samples&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cd log4j2-kafka&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$ ./oneLiner.sh&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/tecris/blog-samples/blob/master/log4j2-kafka/src/main/resources/log4j2.xml&#34;&gt;log4j2.xml&lt;/a&gt; configuration:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;Appenders&amp;gt;
  &amp;lt;Kafka name=&amp;quot;Kafka&amp;quot; topic=&amp;quot;${sys:kafkaTopic}&amp;quot;&amp;gt;
    &amp;lt;PatternLayout pattern=&amp;quot;[%-5level] %d{yyyy-MM-dd HH:mm:ss.SSS} [%t] %c{1} - %msg%n&amp;quot;/&amp;gt;
    &amp;lt;Property name=&amp;quot;bootstrap.servers&amp;quot;&amp;gt;${sys:kafkaUrl}&amp;lt;/Property&amp;gt;
  &amp;lt;/Kafka&amp;gt;
  ...
&amp;lt;/Appenders&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;/p&gt;

&lt;p&gt;Sample source code available for download on &lt;a href=&#34;https://github.com/tecris/blog-samples/tree/master/log4j2-kafka&#34;&gt;github&lt;/a&gt;&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>Run Maven in Docker</title>
      <link>https://trivialis.eu/post/run-maven-in-docker/</link>
      <pubDate>Fri, 13 Apr 2018 04:53:46 +0000</pubDate>
      
      <guid>https://trivialis.eu/post/run-maven-in-docker/</guid>
      
        <description>&lt;p&gt;Sample how to run maven in docker (to be executed in project root directory, that is, directory that contains project pom.xml):&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ docker run --rm \
  --name maven-build \
  -v &amp;quot;$(pwd)&amp;quot;:/opt \
  -v ~/.m2:/root/.m2 \
  maven:3.5.3-alpine \
  mvn -f /opt/pom.xml clean install
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;
or in docker-compose:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;version: &#39;3&#39;
services:

  maven-build:
    image: maven:3.5.3-alpine
    container_name: maven-build
    volumes:
      - ./:/opt
      - ~/.m2:/root/.m2
    entrypoint:
      -  mvn
      - -f
      - /opt/pom.xml
      - clean
      - install
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Sample source code available for download on &lt;a href=&#34;https://github.com/tecris/blog-samples/tree/master/run-maven-in-docker&#34;&gt;github&lt;/a&gt;&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>It Started Here</title>
      <link>https://trivialis.eu/post/it-started-here/</link>
      <pubDate>Wed, 11 Apr 2018 06:03:33 +0000</pubDate>
      
      <guid>https://trivialis.eu/post/it-started-here/</guid>
      
        <description>&lt;p&gt;&lt;strong&gt;trivialis.org&lt;/strong&gt; &lt;em&gt;day 0&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;The challenge for this blog is to present most, if not all, examples as &lt;em&gt;turn-key&lt;/em&gt; samples.&lt;/p&gt;

&lt;p&gt;While all entries will attempt to include explanation snippets, the aim is to minimize the use of &lt;em&gt;copy-and-paste&lt;/em&gt; (otherwise beloved), and provide full source code with &lt;em&gt;ready-to-run solutions&lt;/em&gt; (did anyone said &lt;strong&gt;immutable&lt;/strong&gt;?).
&lt;/p&gt;

&lt;p&gt;The intention is to create &lt;em&gt;samples&lt;/em&gt; that can be &lt;strong&gt;tested&lt;/strong&gt; in &lt;strong&gt;automated-fashion&lt;/strong&gt; in order to &lt;em&gt;minimise&lt;/em&gt; the time necessary for &lt;strong&gt;updates&lt;/strong&gt; and/or &lt;strong&gt;maintenance&lt;/strong&gt;.&lt;/p&gt;</description>
      
    </item>
    
  </channel>
</rss>